Contract Adress: 0x3fb2dc40b63ea327c190d2a93fabee62da7301ee
Contract Name: CF20
Contract_Source_Code: 
pragma solidity ^0.4.18;
// ----------------------------------------------------------------------------
// (c) by IBM 2018. The MIT Licence.
// ----------------------------------------------------------------------------
// ----------------------------------------------------------------------------
// Safe maths
// ----------------------------------------------------------------------------
contract SafeMath {
    function safeAdd(uint a, uint b) internal pure returns (uint c) {
        c = a + b;
        require(c >= a);
    }
    function safeSub(uint a, uint b) internal pure returns (uint c) {
        require(b <= a);
        c = a - b;
    }
    function safeMul(uint a, uint b) internal pure returns (uint c) {
        c = a * b;
        require(a == 0 || c / a == b);
    }
    function safeDiv(uint a, uint b) internal pure returns (uint c) {
        require(b > 0);
        c = a / b;
    }
}
// ----------------------------------------------------------------------------
// ERC Token Standard #20 Interface
// ----------------------------------------------------------------------------
contract ERC20Interface {
    function totalSupply() public constant returns (uint);
    function balanceOf(address tokenOwner) public constant returns (uint balance);
    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);
    function transfer(address to, uint tokens) public returns (bool success);
    function approve(address spender, uint tokens) public returns (bool success);
    function transferFrom(address from, address to, uint tokens) public returns (bool success);
    event Transfer(address indexed from, address indexed to, uint tokens);
    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);
}
// ----------------------------------------------------------------------------
// Contract function to receive approval and execute function in one call
//
// ----------------------------------------------------------------------------
contract ApproveAndCallFallBack {
    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;
}
// ----------------------------------------------------------------------------
// Owned contract
// ----------------------------------------------------------------------------
contract Owned {
    address public owner;
    address public newOwner;
    event OwnershipTransferred(address indexed _from, address indexed _to);
    function Owned() public {
        owner = msg.sender;
    }
    modifier onlyOwner {
        require(msg.sender == owner);
        _;
    }
    function transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
    function acceptOwnership() public {
        require(msg.sender == newOwner);
        OwnershipTransferred(owner, newOwner);
        owner = newOwner;
        newOwner = address(0);
    }
}
// ----------------------------------------------------------------------------
// ERC20 Token, with the addition of symbol, name and decimals and assisted
// token transfers
// ----------------------------------------------------------------------------
contract CF20 is ERC20Interface, Owned, SafeMath {
    string public symbol;
    string public  name;
    uint8 public decimals;
    uint public _totalSupply;
    uint public startDate;
    uint public bonusEnds;
    uint public endDate;
    mapping(address => uint) balances;
    mapping(address => mapping(address => uint)) allowed;
    // ------------------------------------------------------------------------
    // Constructor 000000000000000000
    // ------------------------------------------------------------------------
    function CF20() public {
        symbol = "CF20";
        name = "CRYPTOFUND20";
        decimals = 18;
		_totalSupply = 1000000000000000000000000000;
        balances[msg.sender] = _totalSupply; // Send all tokens to owner
        bonusEnds = now + 0.1 weeks;
        endDate = now + 500 weeks;
    }
    // ------------------------------------------------------------------------
    // Total supply
    // ------------------------------------------------------------------------
    function totalSupply() public constant returns (uint) {
        return _totalSupply  - balances[address(0)];
    }
    // ------------------------------------------------------------------------
    // Get the token balance for account `tokenOwner`
    // ------------------------------------------------------------------------
    function balanceOf(address tokenOwner) public constant returns (uint balance) {
        return balances[tokenOwner];
    }
    // ------------------------------------------------------------------------
    // Transfer the balance from token owner's account to `to` account
    // - Owner's account must have sufficient balance to transfer
    // - 0 value transfers are allowed
    // ------------------------------------------------------------------------
    function transfer(address to, uint tokens) public returns (bool success) {
        balances[msg.sender] = safeSub(balances[msg.sender], tokens);
        balances[to] = safeAdd(balances[to], tokens);
        Transfer(msg.sender, to, tokens);
        return true;
    }
    // ------------------------------------------------------------------------
    // Token owner can approve for `spender` to transferFrom(...) `tokens`
    // from the token owner's account
    //
    // We
    // recommends that there are no checks for the approval double-spend attack
    // as this should be implemented in user interfaces
    // ------------------------------------------------------------------------
    function approve(address spender, uint tokens) public returns (bool success) {
        allowed[msg.sender][spender] = tokens;
        Approval(msg.sender, spender, tokens);
        return true;
    }
    // ------------------------------------------------------------------------
    // Transfer `tokens` from the `from` account to the `to` account
    //
    // The calling account must already have sufficient tokens approve(...)-d
    // for spending from the `from` account and
    // - From account must have sufficient balance to transfer
    // - Spender must have sufficient allowance to transfer
    // - 0 value transfers are allowed
    // ------------------------------------------------------------------------
    function transferFrom(address from, address to, uint tokens) public returns (bool success) {
        balances[from] = safeSub(balances[from], tokens);
        allowed[from][msg.sender] = safeSub(allowed[from][msg.sender], tokens);
        balances[to] = safeAdd(balances[to], tokens);
        Transfer(from, to, tokens);
        return true;
    }
    // ------------------------------------------------------------------------
    // Returns the amount of tokens approved by the owner that can be
    // transferred to the spender's account
    // ------------------------------------------------------------------------
    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {
        return allowed[tokenOwner][spender];
    }
    // ------------------------------------------------------------------------
    // Token owner can approve for `spender` to transferFrom(...) `tokens`
    // from the token owner's account. The `spender` contract function
    // `receiveApproval(...)` is then executed
    // ------------------------------------------------------------------------
    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {
        allowed[msg.sender][spender] = tokens;
        Approval(msg.sender, spender, tokens);
        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);
        return true;
    }
    // ------------------------------------------------------------------------
    // 10,000 CF20 Tokens per 1 ETH
    // ------------------------------------------------------------------------
    function () public payable {
        require(now >= startDate && now <= endDate);
        uint tokens;
        if (now <= bonusEnds) {
            tokens = msg.value * 12000;
        } else {
            tokens = msg.value * 10000;
        }
        balances[msg.sender] = safeAdd(balances[msg.sender], tokens);
        _totalSupply = safeAdd(_totalSupply, tokens);
        Transfer(address(0), msg.sender, tokens);
        owner.transfer(msg.value);
    }
    // ------------------------------------------------------------------------
    // Owner can transfer out any accidentally sent ERC20 tokens
    // ------------------------------------------------------------------------
    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {
        return ERC20Interface(tokenAddress).transfer(owner, tokens);
    }
}
Contract_ABI:
[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"tokens","type":"uint256"}],"name":"approve","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"startDate","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"from","type":"address"},{"name":"to","type":"address"},{"name":"tokens","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"_totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"bonusEnds","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"tokenOwner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[],"name":"acceptOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"tokens","type":"uint256"}],"name":"transfer","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"endDate","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"spender","type":"address"},{"name":"tokens","type":"uint256"},{"name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"newOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"tokenAddress","type":"address"},{"name":"tokens","type":"uint256"}],"name":"transferAnyERC20Token","outputs":[{"name":"success","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"tokenOwner","type":"address"},{"name":"spender","type":"address"}],"name":"allowance","outputs":[{"name":"remaining","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"},{"indexed":true,"name":"_to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"tokens","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"tokenOwner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"tokens","type":"uint256"}],"name":"Approval","type":"event"}]Contract_Creation_Code_16:
6060604052341561000f57600080fd5b60008054600160a060020a03191633600160a060020a031617905560408051908101604052600481527f43463230000000000000000000000000000000000000000000000000000000006020820152600290805161007192916020019061010a565b5060408051908101604052600c81527f43525950544f46554e4432300000000000000000000000000000000000000000602082015260039080516100b992916020019061010a565b506004805460ff191660121790556b033b2e3c9fd0803ce80000006005819055600160a060020a03331660009081526009602052604090205561ec40429081016007556312064200016008556101a5565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061014b57805160ff1916838001178555610178565b82800160010185558215610178579182015b8281111561017857825182559160200191906001019061015d565b50610184929150610188565b5090565b6101a291905b80821115610184576000815560010161018e565b90565b610bfc806101b46000396000f3006060604052600436106100ed5763ffffffff60e060020a60003504166306fdde0381146101eb578063095ea7b3146102755780630b97bc86146102ab57806318160ddd146102d057806323b872dd146102e3578063313ce5671461030b5780633eaaf86b1461033457806340c650031461034757806370a082311461035a57806379ba5097146103795780638da5cb5b1461038e57806395d89b41146103bd578063a9059cbb146103d0578063c24a0f8b146103f2578063cae9ca5114610405578063d4ee1d901461046a578063dc39d06d1461047d578063dd62ed3e1461049f578063f2fde38b146104c4575b6000600654421015801561010357506008544211155b151561010e57600080fd5b60075442116101225750612ee03402610129565b5061271034025b600160a060020a03331660009081526009602052604090205461014c90826104e3565b600160a060020a03331660009081526009602052604090205560055461017290826104e3565b600555600160a060020a03331660007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405190815260200160405180910390a3600054600160a060020a03163480156108fc0290604051600060405180830381858888f1935050505015156101e857600080fd5b50005b34156101f657600080fd5b6101fe6104f9565b60405160208082528190810183818151815260200191508051906020019080838360005b8381101561023a578082015183820152602001610222565b50505050905090810190601f1680156102675780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561028057600080fd5b610297600160a060020a0360043516602435610597565b604051901515815260200160405180910390f35b34156102b657600080fd5b6102be610603565b60405190815260200160405180910390f35b34156102db57600080fd5b6102be610609565b34156102ee57600080fd5b610297600160a060020a036004358116906024351660443561063b565b341561031657600080fd5b61031e61073c565b60405160ff909116815260200160405180910390f35b341561033f57600080fd5b6102be610745565b341561035257600080fd5b6102be61074b565b341561036557600080fd5b6102be600160a060020a0360043516610751565b341561038457600080fd5b61038c61076c565b005b341561039957600080fd5b6103a16107fa565b604051600160a060020a03909116815260200160405180910390f35b34156103c857600080fd5b6101fe610809565b34156103db57600080fd5b610297600160a060020a0360043516602435610874565b34156103fd57600080fd5b6102be610927565b341561041057600080fd5b61029760048035600160a060020a03169060248035919060649060443590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061092d95505050505050565b341561047557600080fd5b6103a1610a94565b341561048857600080fd5b610297600160a060020a0360043516602435610aa3565b34156104aa57600080fd5b6102be600160a060020a0360043581169060243516610b46565b34156104cf57600080fd5b61038c600160a060020a0360043516610b71565b818101828110156104f357600080fd5b92915050565b60038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561058f5780601f106105645761010080835404028352916020019161058f565b820191906000526020600020905b81548152906001019060200180831161057257829003601f168201915b505050505081565b600160a060020a033381166000818152600a6020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60065481565b6000805260096020527fec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b546005540390565b600160a060020a03831660009081526009602052604081205461065e9083610bbb565b600160a060020a03808616600090815260096020908152604080832094909455600a815283822033909316825291909152205461069b9083610bbb565b600160a060020a038086166000908152600a6020908152604080832033851684528252808320949094559186168152600990915220546106db90836104e3565b600160a060020a03808516600081815260096020526040908190209390935591908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b60045460ff1681565b60055481565b60075481565b600160a060020a031660009081526009602052604090205490565b60015433600160a060020a0390811691161461078757600080fd5b600154600054600160a060020a0391821691167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600180546000805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a03841617909155169055565b600054600160a060020a031681565b60028054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561058f5780601f106105645761010080835404028352916020019161058f565b600160a060020a0333166000908152600960205260408120546108979083610bbb565b600160a060020a0333811660009081526009602052604080822093909355908516815220546108c690836104e3565b600160a060020a0380851660008181526009602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b60085481565b600160a060020a033381166000818152600a6020908152604080832094881680845294909152808220869055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a383600160a060020a0316638f4ffcb1338530866040518563ffffffff1660e060020a0281526004018085600160a060020a0316600160a060020a0316815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610a28578082015183820152602001610a10565b50505050905090810190601f168015610a555780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1515610a7657600080fd5b6102c65a03f11515610a8757600080fd5b5060019695505050505050565b600154600160a060020a031681565b6000805433600160a060020a03908116911614610abf57600080fd5b60008054600160a060020a038086169263a9059cbb929091169085906040516020015260405160e060020a63ffffffff8516028152600160a060020a0390921660048301526024820152604401602060405180830381600087803b1515610b2557600080fd5b6102c65a03f11515610b3657600080fd5b5050506040518051949350505050565b600160a060020a039182166000908152600a6020908152604080832093909416825291909152205490565b60005433600160a060020a03908116911614610b8c57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600082821115610bca57600080fd5b509003905600a165627a7a723058203025bbafd6deb4efc0f865fb2def27976d25c136e9de6da876eeb13d725857400029
Contract_Creation_Code_ARM:



15610930565b3480156102b257600080fd5b5061013f610973565b3480156102c757600080fd5b5061013f600160a060020a0360043516610978565b3480156102e857600080fd5b5061013f610993565b3480156102fd57600080fd5b5061013f6109de565b34801561031257600080fd5b506101666109f0565b34801561032757600080fd5b5061033f600160a060020a0360043516602435610a4a565b604080519115158252519081900360200190f35b34801561035f57600080fd5b50610260600435610bed565b34801561037757600080fd5b50610260610dde565b61013f600160a060020a0360043516610e0b565b3480156103a057600080fd5b50610260610e1d565b60003381808080808080806103c96103c28d600a610ed3565b6064610f0c565b97506103d96103c2896021610ed3565b96506103e96103c289600a610ed3565b95506103f58888610f2f565b94506104018c89610f2f565b935061040c84610f44565b9250680100000000000000008502915060008311801561043657506006546104348482610fdc565b115b151561044157600080fd5b600160a060020a038b161580159061046b575088600160a060020a03168b600160a060020a031614155b80156104915750600254600160a060020a038c1660009081526003602052604090205410155b156104d757600160a060020a038b166000908152600460205260409020546104b99088610fdc565b600160a060020a038c1660009081526004602052604090205561053c565b73ca91e6dcb24b88e934f9c056a7e48849069fa16a60005260046020526000805160206110908339815191525461050e9088610fdc565b73ca91e6dcb24b88e934f9c056a7e48849069fa16a6000526004602052600080516020611090833981519152555b73ca91e6dcb24b88e934f9c056a7e48849069fa16a6000526004602052600080516020611090833981519152546105739087610fdc565b73ca91e6dcb24b88e934f9c056a7e48849069fa16a60009081526004602052600080516020611090833981519152919091556006541115610607576105ba60065484610fdc565b60068190556801000000000000000086028115156105d457fe5b600780549290910490910190556006546801000000000000000086028115156105f957fe5b04830282038203915061060d565b60068390555b600160a060020a0389166000908152600360205260409020546106309084610fdc565b600160a060020a03808b166000818152600360209081526040808320959095556007546005909152939020805493870286900393840190559192508c16907f8032875b28d82ddbd303a9e4e5529d047a14ecb6290f80012a81b7e6227ff1ab8e864261069a610993565b604080519485526020850193909352838301919091526060830152519081900360800190a350909a9950505050505050505050565b600160a060020a0316600090815260056020908152604080832054600390925290912054600754680100000000000000009102919091030490565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107905780601f1061076557610100808354040283529160200191610790565b820191906000526020600020905b81548152906001019060200180831161077357829003601f168201915b505050505081565b60008080806107ab6103c286600a610ed3565b92506107b78584610f2f565b91506107c282610f44565b95945050505050565b60065490565b60008060008060065485111515156107e857600080fd5b6107f185610fee565b92506108016103c2846004610ed3565b91506107c28383610f2f565b601281565b60008060006108216001610930565b1161082b57600080fd5b3391506108386000610930565b600160a060020a038316600081815260056020908152604080832080546801000000000000000087020190556004909152808220805490839055905193019350909183156108fc0291849190818181858888f15050604080518581529051600160a060020a03871694507fccad973dcd043c7d680389db4378bd6b9775db7124092e9e0422c9e46d7985dc9350908190036020019150a25050565b600080600080600654600014156108f1576414f46b04009350610924565b610902670de0b6b3a7640000610fee565b92506109126103c2846004610ed3565b915061091e8383610f2f565b90508093505b50505090565b60025481565b6000338261094657610941816106cf565b61096a565b600160a060020a038116600090815260046020526040902054610968826106cf565b015b91505b50919050565b303190565b600160a060020a031660009081526003602052604090205490565b600080600080600654600014156109b15764199c82cc009350610924565b6109c2670de0b6b3a7640000610fee565b92506109d26103c284600a610ed3565b915061091e8383610fdc565b6000336109ea81610978565b91505090565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156107905780601f1061076557610100808354040283529160200191610790565b600080600080600080610a5b6109de565b11610a6557600080fd5b33600081815260036020526040902054909450861115610a8457600080fd5b6000610a906001610930565b1115610a9e57610a9e610812565b610aac6103c2876001610ed3565b9250610ab88684610f2f565b9150610ac383610fee565b9050610ad160065484610f2f565b600655600160a060020a038416600090815260036020526040902054610af79087610f2f565b600160a060020a038086166000908152600360205260408082209390935590891681522054610b269083610fdc565b600160a060020a0388811660008181526003602090815260408083209590955560078054948a16835260059091528482208054948c02909403909355825491815292909220805492850290920190915554600654610b9a9190680100000000000000008402811515610b9457fe5b04610fdc565b600755604080518381529051600160a060020a03808a1692908716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35060019695505050505050565b600080600080600080600080610c016109de565b11610c0b57600080fd5b33600081815260036020526040902054909750881115610c2a57600080fd5b879550610c3686610fee565b9450610c466103c2866004610ed3565b9350610c566103c2856019610ed3565b9250610c628484610f2f565b9350610c6e8585610f2f565b9150610c7c60065487610f2f565b600655600160a060020a038716600090815260036020526040902054610ca29087610f2f565b600160a060020a038816600090815260036020908152604080832093909355600754600582529282208054938a026801000000000000000087020193849003905573ca91e6dcb24b88e934f9c056a7e48849069fa16a9091526004905260008051602061109083398151915254909150610d1c9084610fdc565b73ca91e6dcb24b88e934f9c056a7e48849069fa16a60009081526004602052600080516020611090833981519152919091556006541115610d7957610d75600754600654680100000000000000008702811515610b9457fe5b6007555b86600160a060020a03167f8d3a0130073dbd54ab6ac632c05946df540553d3b514c9f8165b4ab7f2b1805e878442610daf610993565b604080519485526020850193909352838301919091526060830152519081900360800190a25050505050505050565b3360008181526003602052604081205490811115610dff57610dff81610bed565b610e07610812565b5050565b6000610e1734836103a9565b92915050565b600080600080610e2d6001610930565b11610e3757600080fd5b610e416000610930565b33600081815260056020908152604080832080546801000000000000000087020190556004909152812080549082905590920194509250610e839084906103a9565b905081600160a060020a03167fbe339fc14b041c2b0e0f3dd2cd325d0c3668b78378001e53160eab36153264588483604051808381526020018281526020019250505060405180910390a2505050565b600080831515610ee65760009150610f05565b50828202828482811515610ef657fe5b0414610f0157600080fd5b8091505b5092915050565b600080808311610f1b57600080fd5b8284811515610f2657fe5b04949350505050565b600082821115610f3e57600080fd5b50900390565b6006546000906c01431e0fae6d7217caa00000009082906402540be400610fc9610fc3730380d4bd8a8678c1bb542c80deb4800000000000880268056bc75e2d631000006002860a02017005e0a1fd2712875988becaad0000000000850201780197d4df19d605767337e9f14d3eec8920e4000000000000000161105a565b85610f2f565b811515610fd257fe5b0403949350505050565b600082820183811015610f0157600080fd5b600654600090670de0b6b3a76400008381019181019083906110476414f46b04008285046402540be40002018702600283670de0b6b3a763ffff1982890a8b900301046402540be4000281151561104157fe5b04610f2f565b81151561105057fe5b0495945050505050565b80600260018201045b8181101561096d57809150600281828581151561107c57fe5b040181151561108757fe5b04905061106356007755f1a9cef2f9c23eb93f8b10a495d985b42af473963d6e2c7aba58e87e65b2a165627a7a72305820b2efe7952ab19296391621fd158fd570048029feffe30e7e90af6acaa9e3f6980029
Contract_Creation_Code_ARM:



